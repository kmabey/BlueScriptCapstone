@model IEnumerable<Blue_Script.Scene>
@{
	ViewBag.Title = "My BlueScript";
}
<!-- 
TODO: 
	Make adding charaters and locations right at your fingertips(inside the event)
	Be able to view, and edit via Modal
	Be able to delete
	Add buttons where they are needed
	Fix CSS Colors
	Fix Navigation
	Add Dummy data to database
	Add login screen via Modal
	Add logo to site.
	Implement Home page(Design)
	Make events partial views that work like edit views(CRUD)
	Get Dummy data to show up on the view
-->
<!--Side Nav & drag and drop area-->
<div class="row-fluid">
	<div class="span2">
		<div class="sidebar">
			<ul class="nav nav-pills nav-stacked">
				<li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Add
					New</a>
					<ul class="dropdown-menu">
						<li><a href="#eventModal" role="button" data-toggle="modal">Scene</a></li>
						<li><a href="#">Character</a></li>
						<li><a href="#">Location</a></li>
					</ul>
				</li>
				<li><a href="#">Characters</a></li>
				<li><a href="#">Locations</a></li>
			</ul>
		</div>
	</div>
	<div class="span10">
		<div class="workarea">
			@for (var i = 0; i < Model.Count(); i++)
   {
				<div class="event" draggable="true">
					@using (Html.BeginForm("MyBlueScript", "Home"))
	 {
						<fieldset>
							<legend>Scene</legend>
							@Html.HiddenFor(model => Model.ElementAt(i).ID)
							<h5>
								Name</h5>
							<div class="editor-field">@Html.EditorFor(model => Model.ElementAt(i).Name)</div>
							<h5>Setting: @Model.ElementAt(i).Setting.Name <a href="#modal@(Model.ElementAt(i).Setting.ID)" role="button" class="btn btn-mini float-right" data-toggle="modal">
							<i class="icon-edit"></i></a></h5>

							<h5>
								Characters</h5>
							@foreach (var c in Model.ElementAt(i).Characters)
	   {
								<p>@c.FullName <a href="#modal@(c.CharacterID)" role="button" class="btn btn-mini float-right" data-toggle="modal">
								<i class="icon-edit"></i></a>
							</p>
							<!-- Edit Character Modal -->
							<div id="modal@(c.CharacterID)" class="modal hide fade" tabindex="-1" role="dialog" >
								@using (Html.BeginForm("Setting", "Home"))
		{
									
									@Html.ValidationSummary(true)
									<fieldset>
										<legend></legend>
										<div class="modal-header">
											<button type="button" class="close" data-dismiss="modal">
												×</button>
											<h3>
												Edit Character</h3>
										</div>
										<div class="modal-body">
											@Html.HiddenFor(model => c.CharacterID)
											<div class="editor-label">@Html.LabelFor(model => c.FullName)</div>
											<div class="editor-field">
												@Html.EditorFor(model => c.FullName)
												@Html.ValidationMessageFor(model => c.FullName)
											</div>
											<div class="editor-label">@Html.LabelFor(model => c.Notes)</div>
											<div class="editor-field">
												@Html.EditorFor(model => c.Notes)
												@Html.ValidationMessageFor(model => c.Notes)
											</div>
											<div class="modal-footer">
												<button class="btn" data-dismiss="modal">
													Cancel</button>
												<input type="submit" value="Save Changes" class="btn btn-primary" />
											</div>
										</div>
									</fieldset>
									
									
		}
							</div>
							<!--End Character Model-->
	   }
							<h5>
								Notes</h5>
							@Html.EditorFor(model => Model.ElementAt(i).Notes)
							<input type="submit" value="Save" />
						</fieldset>

	 }
				</div>
					
   }
			<div class="event">
				<a href="#eventModal" role="button" data-toggle="modal"><i class="icon-plus-sign-alt icon-4x">
				</i></a>
			</div>
		</div>
	</div>
</div>
